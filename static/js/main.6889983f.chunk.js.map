{"version":3,"sources":["assets/walkingIcon.png","assets/watermelonBikeIcon.png","Header.js","Form.js","Map.js","Podcast.js","App.js","serviceWorker.js","index.js","assets/watermelonfavicon.png"],"names":["module","exports","Header","props","className","src","watermelonfavicon","alt","onClick","scrollToSearch","Form","action","onSubmit","this","displayMap","htmlFor","value","from","onChange","handleChange","name","type","placeholder","required","to","search","id","Component","Map","mapImage","margin","isMapShown","zoomIn","zoomOut","getPodcasts","watermelonBikeIcon","bicycle","Math","floor","walkingIcon","pedestrian","Podcast","chosenPodcast","podcasts","map","podcast","key","podcast_title_original","image","publisher_original","audio_length_sec","round","href","link","displayChosenPodcast","isPodcastShown","audio","controls","App","section","document","querySelector","scrollIntoView","behavior","block","scrollToSearchBottom","resultButton","timer","setTimeout","clearTimeout","event","preventDefault","state","setState","target","axios","url","method","responseType","params","routeType","then","response","commuteTimeSec","data","route","realTime","commuteTimeMin","roundedTime","transportationType","minLen","maxLen","alert","headers","q","podcastGenre","genre_ids","language","len_min","len_max","results","length","catch","genre","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,gD,qOC0C5BC,EAvCA,SAACC,GACd,OACE,yBAAKC,UAAU,iBACb,gCACE,yBAAKA,UAAU,WACb,gDACA,yBAAKA,UAAU,iBACb,2BACE,yBAAKC,IAAKC,IAAmBC,IAAI,eADnC,4CAGE,yBAAKF,IAAKC,IAAmBC,IAAI,iBAGrC,4BACE,6CACA,6FAGA,qHAIA,2JAKF,4BACEH,UAAU,cACVI,QAAS,kBAAML,EAAMM,eAAe,kBAFtC,qBAIqB,SC0DhBC,E,uKAzFH,IAAD,OACP,OACE,6BAASN,UAAU,eACjB,yBAAKA,UAAU,WACb,uGAIA,0BAAMO,OAAO,GAAGC,SAAUC,KAAKV,MAAMW,YACnC,yBAAKV,UAAU,cACb,yDACA,2BAAOW,QAAQ,IAAf,oBACA,2BACEC,MAAOH,KAAKV,MAAMc,KAClBC,SAAUL,KAAKV,MAAMgB,aACrBC,KAAK,OACLC,KAAK,OACLC,YAAY,6CACZC,UAAQ,IAGV,2BAAOR,QAAQ,IAAf,eACA,2BACEC,MAAOH,KAAKV,MAAMqB,GAClBN,SAAUL,KAAKV,MAAMgB,aACrBC,KAAK,KACLC,KAAK,OACLC,YAAY,6CACZC,UAAQ,KAGZ,yBAAKnB,UAAU,cACb,6FACiE,KAEjE,2BAAOW,QAAQ,IAAf,8BACA,2BACEC,MAAOH,KAAKV,MAAMsB,OAClBP,SAAUL,KAAKV,MAAMgB,aACrBC,KAAK,SACLC,KAAK,OACLC,YAAY,gCAEd,4BAAQd,QAAS,kBAAM,EAAKL,MAAMM,eAAe,kBAAjD,UAIA,iCACA,2BAAOM,QAAQ,gBAAf,+BACA,4BACEK,KAAK,eACLM,GAAG,eACHR,SAAUL,KAAKV,MAAMgB,cAErB,4BAAQH,MAAM,IAAd,0BACA,4BAAQA,MAAM,IAAd,0BACA,4BAAQA,MAAM,OAAd,oBACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,YACA,4BAAQA,MAAM,OAAd,aACA,4BAAQA,MAAM,OAAd,QACA,4BAAQA,MAAM,OAAd,iBACA,4BAAQA,MAAM,OAAd,qBACA,4BAAQA,MAAM,OAAd,UACA,4BAAQA,MAAM,OAAd,WACA,4BAAQA,MAAM,OAAd,cACA,4BAAQA,MAAM,MAAd,oBACA,4BAAQA,MAAM,OAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,MAAd,QACA,4BAAQA,MAAM,MAAd,2BACA,4BAAQA,MAAM,OAAd,WACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,OAAd,cACA,4BAAQA,MAAM,OAAd,eAGF,4BAAQR,QAAS,kBAAM,EAAKL,MAAMM,eAAe,kBAAjD,WAGK,W,GAlFAkB,a,kCC4EJC,E,uKAzEH,IAAD,OAEDC,EAAQ,6DAAyDhB,KAAKV,MAAMc,KAApE,gBAAgFJ,KAAKV,MAAMqB,GAA3F,wEAA6JX,KAAKV,MAAM2B,QAEtL,OACE,6BAAS1B,UAAU,eACjB,yBAAKA,UAAU,WACb,kEAGCS,KAAKV,MAAM4B,WACV,yBAAK1B,IAAKwB,EAAUtB,IAAI,wBACtB,KACJ,4BAAQC,QAASK,KAAKV,MAAM6B,QAA5B,KACA,4BAAQxB,QAASK,KAAKV,MAAM8B,SAA5B,KACA,yBAAK7B,UAAU,sBACb,yBAAKA,UAAU,kBACb,4BACE,4BACG,IACD,4BACEI,QAAS,kBACP,EAAKL,MAAM+B,YAAY,UAAW,kBAGpC,yBACE7B,IAAK8B,IACL5B,IAAI,gCAITM,KAAKV,MAAMiC,QAAU,IAAM,EAC1B,6CACiBC,KAAKC,MAAMzB,KAAKV,MAAMiC,QAAU,IADjD,KAEK,IACFvB,KAAKV,MAAMiC,QACV,GAAKC,KAAKC,MAAMzB,KAAKV,MAAMiC,QAAU,IAJzC,OAKO,KAGP,6CAAmBvB,KAAKV,MAAMiC,QAA9B,UAIJ,4BACE,4BACE,4BACE5B,QAAS,kBACP,EAAKL,MAAM+B,YAAY,aAAc,kBAGvC,yBAAK7B,IAAKkC,IAAahC,IAAI,iCAG9BM,KAAKV,MAAMqC,WAAa,IAAM,EAC7B,6CACiBH,KAAKC,MAAMzB,KAAKV,MAAMqC,WAAa,IADpD,MAC4D,IACzD3B,KAAKV,MAAMqC,WACV,GAAKH,KAAKC,MAAMzB,KAAKV,MAAMqC,WAAa,IAH5C,OAIO,KAGP,6CAAmB3B,KAAKV,MAAMqC,WAA9B,kB,GA/DAb,aC6EHc,E,uKA9EH,IAAD,OACDC,EAAgB7B,KAAKV,MAAMuC,cACjC,OACE,6BAAStC,UAAU,eACjB,yBAAKsB,GAAG,OAAOtB,UAAU,WACvB,kDACA,wBAAIA,UAAU,kBACZ,yBAAKA,UAAU,kBAEZS,KAAKV,MAAMwC,SAASC,KAAI,SAACC,GACxB,OACE,wBAAIC,IAAKD,EAAQnB,IACf,4BAAKmB,EAAQE,wBACb,yBACE1C,IAAKwC,EAAQG,MACbzC,IAAKsC,EAAQE,yBAEf,yBAAK3C,UAAU,iBACb,sCAAYyC,EAAQI,oBACnBJ,EAAQK,iBAAmB,GAAK,IAAM,EACrC,oCACSb,KAAKC,MAAMO,EAAQK,iBAAmB,GAAK,IAAK,IADzD,KAEK,IACFb,KAAKc,MAAMN,EAAQK,iBAAmB,IACrC,GACEb,KAAKC,MACHO,EAAQK,iBAAmB,GAAK,IAC/B,IAPT,QAWA,oCACSb,KAAKc,MAAMN,EAAQK,iBAAmB,IAD/C,SAIF,uBAAGE,KAAMP,EAAQQ,MAAjB,aACA,4BACE7C,QAAS,kBACP,EAAKL,MAAMmD,qBACTT,EACA,2BAJN,kBAkBd,yBAAKzC,UAAU,gCACb,4CACCS,KAAKV,MAAMoD,eACV,yBAAKT,IAAKJ,EAAchB,GAAItB,UAAU,iBACpC,4BAAKsC,EAAcK,wBACnB,yBAAK3C,UAAU,kBACb,yBACEC,IAAKqC,EAAcM,MACnBzC,IAAKmC,EAAcK,yBAErB,yBAAK3C,UAAU,iBACb,sCAAYsC,EAAcO,oBAC1B,uBAAGG,KAAMV,EAAcW,MAAvB,oBACA,2BAAOhD,IAAKqC,EAAcc,MAAOC,UAAQ,OAI7C,W,GAxEQ9B,aCuRP+B,G,wDAhRb,aAAe,IAAD,8BACZ,gBAmBFjD,eAAiB,SAACkD,GAEMC,SAASC,cAAcF,GAC/BG,eAAe,CAC3BC,SAAU,SACVC,MAAO,WAzBG,EA6BdC,qBAAuB,WAECL,SAASC,cAAc,yBAC/BC,eAAe,CAC3BC,SAAU,SACVC,MAAO,WAlCG,EAsCdE,aAAe,WACb,IAAMC,EAAQC,YAAW,kBAAM,EAAKH,yBAAwB,KAC5D,OAAO,kBAAMI,aAAaF,KAxCd,EA2CdnC,OAAS,SAACsC,GACRA,EAAMC,iBACoB,KAAtB,EAAKC,MAAM1C,OACb,EAAK2C,SAAS,CACZ3C,OAAQ,KAEqB,KAAtB,EAAK0C,MAAM1C,OACpB,EAAK2C,SAAS,CACZ3C,OAAQ,KAGV,EAAK2C,SAAS,CACZ3C,OAAQ,KAvDA,EA4DdG,QAAU,SAACqC,GACTA,EAAMC,iBACoB,IAAtB,EAAKC,MAAM1C,OACb,EAAK2C,SAAS,CACZ3C,OAAQ,KAEqB,KAAtB,EAAK0C,MAAM1C,OACpB,EAAK2C,SAAS,CACZ3C,OAAQ,KAGV,EAAK2C,SAAS,CACZ3C,OAAQ,MAxEA,EA8EdX,aAAe,SAACmD,GACd,EAAKG,SAAL,eACGH,EAAMI,OAAOtD,KAAOkD,EAAMI,OAAO1D,SAhFxB,EAsFdF,WAAa,SAACwD,GAGZ,GAFAA,EAAMC,iBAEkB,KAApB,EAAKC,MAAMvD,MAAiC,KAAlB,EAAKuD,MAAMhD,GAAW,CAChC,CAAC,UAAW,cACpBoB,KAAI,SAACvB,GACb,OAEEsD,IAAM,CACJC,IAAK,kDACLC,OAAQ,MACRC,aAAc,QACdC,OAAQ,CACNjC,IAAK,mCACLkC,UAAW3D,EACXJ,KAAM,EAAKuD,MAAMvD,KACjBO,GAAI,EAAKgD,MAAMhD,MAEhByD,MAAK,SAACC,GAGP,IAAMC,EAAiBD,EAASE,KAAKC,MAAMC,SAEvCC,EAAc,UAAMJ,EAAiB,IACrCK,EAAcnD,KAAKc,MAAMoC,GAC7B,EAAKd,SAAL,aACE1C,YAAY,GACXV,EAAOmE,YAjHN,EA0HdtD,YAAc,SAACuD,EAAoB9B,GAGjC,IAAI+B,EAAS,GACTC,EAAS,GAGc,YAAvBF,GAAoC,EAAKjB,MAAMpC,SAAW,KAE5DsD,EAAS,EAAKlB,MAAMpC,QACpBuD,EAAStD,KAAKc,MAA2B,IAArB,EAAKqB,MAAMpC,QAAgB,IAGxB,eAAvBqD,GACA,EAAKjB,MAAMhC,YAAc,KAGzBkD,EAAS,EAAKlB,MAAMhC,WACpBmD,EAAStD,KAAKc,MAA8B,IAAxB,EAAKqB,MAAMhC,WAAmB,IAGlDoD,MAAM,SAKO,KAAXF,GAA4B,KAAXC,IACnBhB,IAAM,CACJC,IAAK,mDACLC,OAAQ,MACRgB,QAAS,CAAE,kBAAmB,oCAC9Bf,aAAc,OACdC,OAAQ,CACNe,EAAG,EAAKtB,MAAM/C,OAAS,EAAK+C,MAAMuB,aAClCC,UAAW,EAAKxB,MAAMuB,aACtB1E,KAAM,UACN4E,SAAU,UACVC,QAASR,EACTS,QAASR,KAGVV,MAAK,SAACC,IACLA,EAAWA,EAASE,KAAKgB,SACZC,OAAS,EACpBT,MAAM,SACGV,EAASmB,QAAU,GAC5B,EAAK5B,SAAS,CACZ9B,SAAUuC,OAQfoB,OAAM,WACLV,MAAM,mDAGV,EAAKnF,eAAekD,KArLV,EA2LdL,qBAAuB,SAACT,EAASc,GAC/B,EAAKO,eACL,EAAKO,SAAS,CACZlB,gBAAgB,EAChBb,cAAeG,KA7LjB,EAAK2B,MAAQ,CACX7B,SAAU,GACV4D,MAAO,GACPhD,gBAAgB,EAChBb,cAAe,GACfzB,KAAM,GACNO,GAAI,GACJO,YAAY,EAGZgE,aAAc,GACdtE,OAAQ,GACRK,OAAQ,GACRM,QAAS,GACTI,WAAY,IAhBF,E,qDAqMZ,OACE,yBAAKpC,UAAU,OAEb,kBAAC,EAAD,CAAQK,eAAgBI,KAAKJ,iBAE7B,kBAAC,EAAD,CACEA,eAAgBI,KAAKJ,eACrBU,aAAcN,KAAKM,aACnBL,WAAYD,KAAKC,WACjBG,KAAMJ,KAAK2D,MAAMvD,KACjBO,GAAIX,KAAK2D,MAAMhD,GACfC,OAAQZ,KAAK2D,MAAM/C,SAGrB,kBAAC,EAAD,CACEM,WAAYlB,KAAK2D,MAAMzC,WACvBC,OAAQnB,KAAKmB,OACbC,QAASpB,KAAKoB,QACdC,YAAarB,KAAKqB,YAClBE,QAASvB,KAAK2D,MAAMpC,QACpBI,WAAY3B,KAAK2D,MAAMhC,WACvBV,OAAQjB,KAAK2D,MAAM1C,OACnBN,GAAIX,KAAK2D,MAAMhD,GACfP,KAAMJ,KAAK2D,MAAMvD,OAGnB,kBAAC,EAAD,CACEyB,cAAe7B,KAAK2D,MAAM9B,cAC1BC,SAAU9B,KAAK2D,MAAM7B,SACrBW,qBAAsBzC,KAAKyC,qBAC3BC,eAAgB1C,KAAK2D,MAAMjB,iBAE7B,gCACE,yBAAKnD,UAAU,IACb,6DACkC,IAChC,uBACEgD,KAAK,iCACLsB,OAAO,SACP8B,IAAI,uBAHN,iBAMK,IARP,KASK,IACH,uBACEpD,KAAK,iCACLsB,OAAO,SACP8B,IAAI,uBAHN,iBAMK,IAhBP,KAiBK,IACH,uBACEpD,KAAK,kCACLsB,OAAO,SACP8B,IAAI,uBAHN,aAMK,IAxBP,KAyBK,IACH,uBACEpD,KAAK,iCACLsB,OAAO,SACP8B,IAAI,uBAHN,uB,GAlQI7E,cCIE8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpD,SAASqD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdhB,OAAM,SAAAiB,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BzH,EAAOC,QAAU,IAA0B,gD","file":"static/js/main.6889983f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/walkingIcon.f835e1f8.png\";","module.exports = __webpack_public_path__ + \"static/media/watermelonBikeIcon.f2c0260c.png\";","import React from \"react\";\nimport watermelonfavicon from \"./assets/watermelonfavicon.png\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"flexContainer\">\n      <header>\n        <div className=\"wrapper\">\n          <h1>Podcast Commuter</h1>\n          <div className=\"flexContainer\">\n            <p>\n              <img src={watermelonfavicon} alt=\"watermelon\" />\n              Your source for juicy podcasts on the go!\n              <img src={watermelonfavicon} alt=\"watermelon\" />\n            </p>\n          </div>\n          <ul>\n            <li>How it works:</li>\n            <li>\n              1. Enter your starting address, followed by your destination.\n            </li>\n            <li>\n              2. Search a podcast by name, or select a cateogory of podcast\n              you're in the mood for!\n            </li>\n            <li>\n              3. Let us work some magic and populate the perfect, juiciest, most\n              time coordinated podcast just for you and your commute!\n            </li>\n          </ul>\n          <button\n            className=\"startButton\"\n            onClick={() => props.scrollToSearch(\".background1\")}\n          >\n            Let's get started!{\" \"}\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  render() {\n    return (\n      <section className=\"background1\">\n        <div className=\"wrapper\">\n          <h2>\n            Tell us your starting address, where you're headed, and pick a\n            podcast!\n          </h2>\n          <form action=\"\" onSubmit={this.props.displayMap}>\n            <div className=\"borderBox1\">\n              <h2>please enter your address</h2>\n              <label htmlFor=\"\">Starting Address</label>\n              <input\n                value={this.props.from}\n                onChange={this.props.handleChange}\n                name=\"from\"\n                type=\"text\"\n                placeholder=\"Street number, street name, city, province\"\n                required\n              />\n\n              <label htmlFor=\"\">Destination</label>\n              <input\n                value={this.props.to}\n                onChange={this.props.handleChange}\n                name=\"to\"\n                type=\"text\"\n                placeholder=\"Street number, street name, city, province\"\n                required\n              />\n            </div>\n            <div className=\"borderBox1\">\n              <h2>\n                please search for a podcast by name, or choose a podcast genre{\" \"}\n              </h2>\n              <label htmlFor=\"\">Search for podcast by name</label>\n              <input\n                value={this.props.search}\n                onChange={this.props.handleChange}\n                name=\"search\"\n                type=\"text\"\n                placeholder=\"Example: My Favorite Murder\"\n              />\n              <button onClick={() => this.props.scrollToSearch(\".background2\")}>\n                SELECT\n              </button>\n\n              <p>OR</p>\n              <label htmlFor=\"podcastGenre\">Search for podcast by genre</label>\n              <select\n                name=\"podcastGenre\"\n                id=\"podcastGenre\"\n                onChange={this.props.handleChange}\n              >\n                <option value=\"\">Choose a podcast genre</option>\n                <option value=\"\">Back to search by name</option>\n                <option value=\"144\">Personal Finance</option>\n                <option value=\"77\">Sports</option>\n                <option value=\"93\">Business</option>\n                <option value=\"111\">Education</option>\n                <option value=\"100\">Arts</option>\n                <option value=\"132\">Kids & Family</option>\n                <option value=\"122\">Society & Culture</option>\n                <option value=\"133\">Comedy</option>\n                <option value=\"168\">Fiction</option>\n                <option value=\"117\">Government</option>\n                <option value=\"88\">Health & Fitness</option>\n                <option value=\"125\">History</option>\n                <option value=\"82\">Leisure</option>\n                <option value=\"134\">Music</option>\n                <option value=\"99\">News</option>\n                <option value=\"69\">Religion & Spirituality</option>\n                <option value=\"107\">Science</option>\n                <option value=\"68\">TV & Film</option>\n                <option value=\"127\">Technology</option>\n                <option value=\"135\">True Crime</option>\n              </select>\n              {/* the below button will clear the genre of podcast if user decides to change their mind and search for specific podcast instead & also clear the podcast name input field   */}\n              <button onClick={() => this.props.scrollToSearch(\".background2\")}>\n                SELECT\n              </button>\n            </div>{\" \"}\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport walkingIcon from \"./assets/walkingIcon.png\";\nimport watermelonBikeIcon from \"./assets/watermelonBikeIcon.png\";\n\nclass Map extends Component {\n  render() {\n    //Assign the mapUrl to a variable\n    const mapImage = `https://www.mapquestapi.com/staticmap/v5/map?start=${this.props.from}&end=${this.props.to}&size=400,200@2x&key=GjfNgstNA6zUKUgGcbkAzOwhHGvwyPRl&margin=${this.props.margin}`;\n\n    return (\n      <section className=\"background2\">\n        <div className=\"wrapper\">\n          <h2>Choose your method of transportion</h2>\n\n          {/* Ternary operator to display Map */}\n          {this.props.isMapShown ? (\n            <img src={mapImage} alt=\"Map of user commute\" />\n          ) : null}\n          <button onClick={this.props.zoomIn}>+</button>\n          <button onClick={this.props.zoomOut}>-</button>\n          <div className=\"transportationMode\">\n            <div className=\"flexContainer2\">\n              <ul>\n                <li>\n                  {\" \"}\n                  <button\n                    onClick={() =>\n                      this.props.getPodcasts(\"bicycle\", \".background3\")\n                    }\n                  >\n                    <img\n                      src={watermelonBikeIcon}\n                      alt=\"Transportation via biking\"\n                    />\n                  </button>\n                </li>\n                {this.props.bicycle / 60 >= 1 ? (\n                  <li>\n                    Cycling Time: {Math.floor(this.props.bicycle / 60)}\n                    hr{\" \"}\n                    {this.props.bicycle -\n                      60 * Math.floor(this.props.bicycle / 60)}\n                    mins{\" \"}\n                  </li>\n                ) : (\n                  <li>Cycling Time: {this.props.bicycle} mins</li>\n                )}\n              </ul>\n              {/* will need to convert mins to hrs in case user's commute length is longer than 60 mins */}\n              <ul>\n                <li>\n                  <button\n                    onClick={() =>\n                      this.props.getPodcasts(\"pedestrian\", \".background3\")\n                    }\n                  >\n                    <img src={walkingIcon} alt=\"Transportation via walking\" />\n                  </button>\n                </li>\n                {this.props.pedestrian / 60 >= 1 ? (\n                  <li>\n                    Walking Time: {Math.floor(this.props.pedestrian / 60)} hr{\" \"}\n                    {this.props.pedestrian -\n                      60 * Math.floor(this.props.pedestrian / 60)}\n                    mins{\" \"}\n                  </li>\n                ) : (\n                  <li>Walking Time: {this.props.pedestrian} mins</li>\n                )}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\n\nclass Podcast extends Component {\n  render() {\n    const chosenPodcast = this.props.chosenPodcast;\n    return (\n      <section className=\"background3\">\n        <div id=\"here\" className=\"wrapper\">\n          <h2>Pick your podcast!</h2>\n          <ul className=\"podcastSection\">\n            <div className=\"flexContainer3\">\n              {/* Map out the state of 'podcasts' array */}\n              {this.props.podcasts.map((podcast) => {\n                return (\n                  <li key={podcast.id}>\n                    <h2>{podcast.podcast_title_original}</h2>\n                    <img\n                      src={podcast.image}\n                      alt={podcast.podcast_title_original}\n                    />\n                    <div className=\"flexContainer\">\n                      <p>Author: {podcast.publisher_original}</p>\n                      {podcast.audio_length_sec / 60 / 60 >= 1 ? (\n                        <p>\n                          Time: {Math.floor(podcast.audio_length_sec / 60 / 60)}{\" \"}\n                          hr{\" \"}\n                          {Math.round(podcast.audio_length_sec / 60) -\n                            60 *\n                              Math.floor(\n                                podcast.audio_length_sec / 60 / 60\n                              )}{\" \"}\n                          mins\n                        </p>\n                      ) : (\n                        <p>\n                          Time: {Math.round(podcast.audio_length_sec / 60)} mins\n                        </p>\n                      )}\n                      <a href={podcast.link}>More Info</a>\n                      <button\n                        onClick={() =>\n                          this.props.displayChosenPodcast(\n                            podcast,\n                            \".chosenPodcastSection\"\n                          )\n                        }\n                      >\n                        Choose\n                      </button>\n                    </div>\n                  </li>\n                );\n              })}\n            </div>\n          </ul>\n          {/* Ternary operator to display chosen podcast */}\n        </div>\n        <div className=\"chosenPodcastSection wrapper\">\n          <h2>Audio Player</h2>\n          {this.props.isPodcastShown ? (\n            <div key={chosenPodcast.id} className=\"chosenPodcast\">\n              <h2>{chosenPodcast.podcast_title_original}</h2>\n              <div className=\"flexContainer2\">\n                <img\n                  src={chosenPodcast.image}\n                  alt={chosenPodcast.podcast_title_original}\n                />\n                <div className=\"flexContainer\">\n                  <p>Author: {chosenPodcast.publisher_original}</p>\n                  <a href={chosenPodcast.link}>More Information</a>\n                  <audio src={chosenPodcast.audio} controls />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Podcast;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Map from \"./Map\";\nimport Podcast from \"./Podcast\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      podcasts: [],\n      genre: \"\",\n      isPodcastShown: false,\n      chosenPodcast: \"\",\n      from: \"\",\n      to: \"\",\n      isMapShown: false,\n      // minTime: \"\",\n      // maxTime: \"\",\n      podcastGenre: \"\",\n      search: \"\",\n      margin: 40,\n      bicycle: \"\",\n      pedestrian: \"\",\n    };\n  }\n\n  scrollToSearch = (section) => {\n    // event.preventDefault();\n    const searchSection = document.querySelector(section);\n    searchSection.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n    });\n  };\n\n  scrollToSearchBottom = () => {\n    // event.preventDefault();\n    const searchSection = document.querySelector(\".chosenPodcastSection\");\n    searchSection.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\",\n    });\n  };\n\n  resultButton = () => {\n    const timer = setTimeout(() => this.scrollToSearchBottom(), 500);\n    return () => clearTimeout(timer);\n  };\n\n  zoomIn = (event) => {\n    event.preventDefault();\n    if (this.state.margin === 90) {\n      this.setState({\n        margin: 70,\n      });\n    } else if (this.state.margin === 70) {\n      this.setState({\n        margin: 40,\n      });\n    } else {\n      this.setState({\n        margin: 1,\n      });\n    }\n  };\n\n  zoomOut = (event) => {\n    event.preventDefault();\n    if (this.state.margin === 1) {\n      this.setState({\n        margin: 40,\n      });\n    } else if (this.state.margin === 40) {\n      this.setState({\n        margin: 70,\n      });\n    } else {\n      this.setState({\n        margin: 90,\n      });\n    }\n  };\n\n  //Function to update user's input to current address state\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n    // console.log(event.target.value);\n  };\n\n  //Function to display MAP and get commute time lengths for both route types\n  displayMap = (event) => {\n    event.preventDefault();\n\n    if (this.state.from !== \"\" && this.state.to !== \"\") {\n      const routeType = [\"bicycle\", \"pedestrian\"];\n      routeType.map((type) => {\n        return (\n          //Call Mapquest API to determine commute time\n          axios({\n            url: \"https://www.mapquestapi.com/directions/v2/route\",\n            method: \"GET\",\n            responseType: \"JSONP\",\n            params: {\n              key: \"EP7bQzAhNEdKJsfFtJeLQDYa3muNllNO\",\n              routeType: type,\n              from: this.state.from,\n              to: this.state.to,\n            },\n          }).then((response) => {\n            // console.log(response.data.route);\n            //get commute time in seconds\n            const commuteTimeSec = response.data.route.realTime;\n            //convert commute time to minutes\n            let commuteTimeMin = `${commuteTimeSec / 60}`;\n            let roundedTime = Math.round(commuteTimeMin);\n            this.setState({\n              isMapShown: true,\n              [type]: roundedTime,\n            });\n          })\n        );\n      });\n    }\n  };\n\n  //Function to call Poscast API\n  getPodcasts = (transportationType, section) => {\n    // commuteType is the argument from onClick funtions (choose route type section)\n    // console.log(transportationType);\n    let minLen = \"\";\n    let maxLen = \"\";\n\n    // if (this.state.bicycle <= 180 || this.state.pedestrian <= 180) {\n    if (transportationType === \"bicycle\" && this.state.bicycle <= 180) {\n      //set maximum and minimum podcast lengths to call Podcasts\n      minLen = this.state.bicycle;\n      maxLen = Math.round(this.state.bicycle * 1.1 + 1);\n      // console.log(minLen, maxLen);\n    } else if (\n      transportationType === \"pedestrian\" &&\n      this.state.pedestrian <= 180\n    ) {\n      //set maximum and minimum podcast lengths to call Podcasts\n      minLen = this.state.pedestrian;\n      maxLen = Math.round(this.state.pedestrian * 1.1 + 1);\n      // console.log(minLen, maxLen);\n    } else {\n      alert(\"ERROR\");\n    }\n\n    //Call Podcast API\n\n    if (minLen !== \"\" && maxLen !== \"\") {\n      axios({\n        url: \"https://listen-api.listennotes.com/api/v2/search\",\n        method: \"GET\",\n        headers: { \"X-ListenAPI-Key\": \"ea2d65fb95fc4f59a943faa7a423b3ad\" },\n        responseType: \"JSON\",\n        params: {\n          q: this.state.search + this.state.podcastGenre,\n          genre_ids: this.state.podcastGenre,\n          type: \"episode\",\n          language: \"English\",\n          len_min: minLen,\n          len_max: maxLen,\n        },\n      })\n        .then((response) => {\n          response = response.data.results;\n          if (response.length < 1) {\n            alert(\"ERROR\");\n          } else if (response.length >= 0) {\n            this.setState({\n              podcasts: response,\n            });\n          }\n          // console.log(response);\n          // this.setState({\n          //   podcasts: response,\n          // });\n        })\n        .catch(() => {\n          alert(\"Oops! Request didn't work! Please try again!\");\n          // add in sweet alert\n        });\n      this.scrollToSearch(section);\n    }\n  };\n\n  //----------------------------------\n  //Function to display chosen Postcast\n  displayChosenPodcast = (podcast, section) => {\n    this.resultButton();\n    this.setState({\n      isPodcastShown: true,\n      chosenPodcast: podcast,\n    });\n    // this.scrollToSearch(section);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* section one */}\n        <Header scrollToSearch={this.scrollToSearch} />\n        {/* section two */}\n        <Form\n          scrollToSearch={this.scrollToSearch}\n          handleChange={this.handleChange}\n          displayMap={this.displayMap}\n          from={this.state.from}\n          to={this.state.to}\n          search={this.state.search}\n        />\n        {/* section 3 */}\n        <Map\n          isMapShown={this.state.isMapShown}\n          zoomIn={this.zoomIn}\n          zoomOut={this.zoomOut}\n          getPodcasts={this.getPodcasts}\n          bicycle={this.state.bicycle}\n          pedestrian={this.state.pedestrian}\n          margin={this.state.margin}\n          to={this.state.to}\n          from={this.state.from}\n        />\n        {/* section 4 */}\n        <Podcast\n          chosenPodcast={this.state.chosenPodcast}\n          podcasts={this.state.podcasts}\n          displayChosenPodcast={this.displayChosenPodcast}\n          isPodcastShown={this.state.isPodcastShown}\n        />\n        <footer>\n          <div className=\"\">\n            <p>\n              Podcast Commuter was created by{\" \"}\n              <a\n                href=\"https://github.com/anhthuydang\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Anh Thuy Dang\n              </a>{\" \"}\n              &&{\" \"}\n              <a\n                href=\"https://github.com/cliffstonge\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Cliff St-Onge\n              </a>{\" \"}\n              &&{\" \"}\n              <a\n                href=\"https://github.com/rojhanpaydar\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Ro Paydar\n              </a>{\" \"}\n              &&{\" \"}\n              <a\n                href=\"https://github.com/VictorKwong\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Victor Wong\n              </a>\n            </p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/watermelonfavicon.0ce774d5.png\";"],"sourceRoot":""}